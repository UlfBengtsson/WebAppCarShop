// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppCarShop.Database;

namespace WebAppCarShop.Migrations
{
    [DbContext(typeof(CarShopDbContext))]
    [Migration("20210510100012_AddInsurances")]
    partial class AddInsurances
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppCarShop.Models.Data.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WebAppCarShop.Models.Data.CarBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarBrands");
                });

            modelBuilder.Entity("WebAppCarShop.Models.Data.CarInsurance", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "InsuranceId");

                    b.HasIndex("InsuranceId");

                    b.ToTable("CarInsurances");
                });

            modelBuilder.Entity("WebAppCarShop.Models.Data.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("WebAppCarShop.Models.Data.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("CarInQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("TimeOfSale")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarInQuestionId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("WebAppCarShop.Models.Data.CarInsurance", b =>
                {
                    b.HasOne("WebAppCarShop.Models.Data.Car", "Car")
                        .WithMany("CarInsurances")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppCarShop.Models.Data.Insurance", "Insurance")
                        .WithMany("CarInsurances")
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Insurance");
                });

            modelBuilder.Entity("WebAppCarShop.Models.Data.Sale", b =>
                {
                    b.HasOne("WebAppCarShop.Models.Data.Car", "CarInQuestion")
                        .WithMany("OwnerHistory")
                        .HasForeignKey("CarInQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarInQuestion");
                });

            modelBuilder.Entity("WebAppCarShop.Models.Data.Car", b =>
                {
                    b.Navigation("CarInsurances");

                    b.Navigation("OwnerHistory");
                });

            modelBuilder.Entity("WebAppCarShop.Models.Data.Insurance", b =>
                {
                    b.Navigation("CarInsurances");
                });
#pragma warning restore 612, 618
        }
    }
}
